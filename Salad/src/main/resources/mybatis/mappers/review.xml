<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">
	
	<!-- 1-1. 전체목록조회 + 최다조회수 게시글 상단고정 + 페이징(23.07.16.) -->
	<!-- 수정(23.08.19.)(23.08.20.) -->
	<select id="selectAllReviewList" parameterType="com.proj.salad.review.vo.Criteria" resultType="com.proj.salad.review.vo.ReviewVO">
	    <![CDATA[
	    	SELECT re_articleNO, re_parentNO, root, level, replyNO, re_title, re_content, userId, re_writeDate, re_viewCnt
			FROM(SELECT re_articleNO, re_parentNO, root, level, replyNO, re_title, re_content, userId, re_writeDate, re_viewCnt
				FROM SHOP_REVIEW
				WHERE re_parentNO = 0
			  	ORDER BY re_viewCnt DESC
			   	LIMIT 3
			) AS T1
			
			UNION ALL
			
			SELECT re_articleNO, re_parentNO, root, level, replyNO, re_title, re_content, userId, re_writeDate, re_viewCnt
			FROM (SELECT re_articleNO, re_parentNO, root, level, replyNO, re_title, re_content, userId, re_writeDate, re_viewCnt
			   	FROM SHOP_REVIEW
			   	WHERE re_articleNO >= 0
			   	ORDER BY root DESC, replyNO ASC, re_articleNO DESC, level ASC
				LIMIT #{rowStart}, 10) AS T
	    ]]>
	</select>
	
	<!-- 1-2. 게시물 총 개수(23.07.16.) -->
	<select id="getTotal" resultType="int">
		select count(re_articleNO) from shop_review
	</select>
	
	<!-- 2-1. 리뷰게시판 글쓰기(23.07.16.) -->
	<!-- fakeOrderNum, orderNum 수정 - 김동혁(23.08.01) -->
	<!-- 수정(23.08.19.) -->
	<insert id="insertReview" parameterType="com.proj.salad.review.vo.ReviewVO">
		<![CDATA[
			INSERT INTO shop_review(re_parentNO, root, replyNO, re_title, userId, re_content, re_writeDate, re_viewCnt, re_fakeOrderNum, re_orderNum)
	   		VALUES(0, (SELECT IFNULL(MAX(root) + 1, 1) FROM shop_review T), 0, #{re_title}, #{userId}, #{re_content}, now(), #{re_viewCnt}, #{re_fakeOrderNum}, #{re_orderNum})
		]]>
   	</insert>

	<!-- 2-1-1. 리뷰게시판 글쓰기시 reviewStatus - 김동혁 수정(23.08.02) -->
	<update id="updateOrderReviewStatus" parameterType="com.proj.salad.review.vo.ReviewVO">
		UPDATE shop_order
		SET reviewStatus = 1
		WHERE ORDERNUM = #{re_orderNum}
	</update>
	
   <!-- 2-2. 파일 업로드(23.07.20.) -->
   <!-- 수정(23.08.19.) -->
   <insert id="insertReviewImg" parameterType="java.util.Map">
      <![CDATA[
         INSERT INTO review_image(userId, re_articleNO, re_originalFileName, re_storedFileName, re_fileSize)
         VALUES(#{USERID}, #{RE_ARTICLENO}, #{RE_ORGINALFILENAME}, #{RE_STOREDFILENAME}, #{RE_FILESIZE})
      ]]>
   </insert>
	
	<!-- 2-3. 파일업로드 DB 저장 시, 게시물 번호 가져오기(23.07.20.) -->
	<select id="selectReview"  parameterType="com.proj.salad.review.vo.ReviewVO"  resultType="String">
		SELECT re_articleNO 
		from shop_review 
		WHERE userId=#{userId} and level=#{level} and re_title=#{re_title}
	</select>

	<!-- 3-1. 게시물 상세조회(23.07.16.) -->
	<!-- fakeOrderNum, orderNum 수정 - 김동혁(23.08.01) -->
	<select id="detailReview" resultType="com.proj.salad.review.vo.ReviewVO">
		<![CDATA[
			SELECT level, root, replyNO, re_title, userId, re_content, re_writeDate, re_viewCnt, re_articleNO, re_fakeOrderNum, re_orderNum
			FROM shop_review
			WHERE re_articleNO = #{re_articleNO}
		]]>
	</select>
	
	<!-- 이미지 정보 가져오기 -->
	<select id="detailImg" parameterType="int" resultType="com.proj.salad.review.vo.Review_imageVO">
	<![CDATA[
			SELECT *
            FROM review_image
		    WHERE re_articleNO = #{RE_ARTICLENO}
	]]>
	</select>
	
	<!-- 3-2. 조회수 증가(23.07.16.) -->
	<update id="updateCnt" parameterType="int">
		<![CDATA[
			UPDATE shop_review
			SET re_viewCnt = re_viewCnt + 1
			WHERE re_articleNO = #{re_articleNO}
		]]>
	</update>
	
	<!-- 하유리: 4-2. 게시물 수정하기(23.07.18.) -->
	<update id="updateReview" parameterType="com.proj.salad.review.vo.ReviewVO">
		<![CDATA[
			UPDATE shop_review 
			SET
				userId=#{userId},
				re_title = #{re_title},
				re_content = #{re_content}
			WHERE re_articleNO = #{re_articleNO}
		]]>
	</update>

	<!-- 하유리: 5. 게시물 삭제하기(23.07.18.) -->
	<delete id="deleteReview">
		<![CDATA[
			DELETE FROM shop_review
			WHERE re_articleNO= #{re_articleNO}
		]]>
	</delete>
	
	<!-- 하유리: 6-2. 답변 작성(23.07.18.) -->	
	<!-- 수정(23.08.20.)(23.08.24.) -->
	<insert id="replyReview" parameterType="com.proj.salad.review.vo.ReviewVO">
		<![CDATA[
			INSERT INTO shop_review(re_parentNO, root, replyNO, level, re_title, userId, re_content, re_writeDate, re_viewCnt)
			VALUES(#{re_articleNO}, #{root}, #{replyNO}+1, #{level}+1, #{re_title}, #{userId}, #{re_content}, NOW(), #{re_viewCnt})
		]]>
	</insert>
		
	<!-- 하유리: 6-2. 기존 답변 순서 변경(23.08.25.) -->
	<update id="updateReplyNO" parameterType="com.proj.salad.review.vo.ReviewVO">
		<![CDATA[
			UPDATE shop_review
	        	SET replyNO = replyNO+1
	        	WHERE root = #{root} AND replyNO > #{replyNO}
		]]>
	</update>
	
	<!-- 7-1. 검색기능 List(23.08.11)(수정: 23.08.15.) -->
	<!-- 1-1. 전체목록조회 + 최다조회수 게시글 상단고정 + 페이징(23.07.16.) -->
	<select id="selectSearchReviewList" parameterType="com.proj.salad.review.vo.Criteria" resultType="com.proj.salad.review.vo.ReviewVO">
		<![CDATA[
			SELECT level, re_articleNO, re_parentNO, CONCAT(REPEAT(' ', 4*(level-1)), re_title) AS re_title,
			    re_content, userId, re_writeDate, re_viewCnt
			FROM shop_review
			WHERE re_articleNO >= 0 AND re_title LIKE CONCAT('%', #{s_title}, '%') AND re_parentNO = 0
			ORDER BY re_articleNO DESC
			LIMIT #{rowStart}, 10
		]]>
	</select>

	<!-- 김동혁: 7-2. 검색된 게시물 총 개수(23.08.11.)(수정: 23.08.15.) -->
	<select id="getSearchTotal" resultType="int" parameterType="String">
		select count(re_articleNO) from shop_review
		where re_title LIKE CONCAT('%', #{s_title}, '%');
	</select>

	<!-- 조상현: ajax 대댓글(23.07.31)  -->
	<select id="selectComment" parameterType="int" resultType="com.proj.salad.review.vo.ajaxCommentVO">
		<![CDATA[
			SELECT ac_commentNO, ac_parentNO, re_articleNO, userId, ac_content, ac_writeDate, level
			FROM re_ajaxComment
			WHERE re_articleNO = #{re_articleNO}
			CONNECT BY PRIOR ac_commentNO = ac_parentNO
			START WITH ac_parentNO = 0
			ORDER SIBLINGS BY ac_writeDate
			]]>
		</select>
	
	<!-- 조상현: ajax 대댓글(23.08.01)  -->
	<insert id="insertComment" parameterType="com.proj.salad.review.vo.ajaxCommentVO">
		<![CDATA[
			INSERT INTO re_ajaxComment(ac_commentNO, re_articleNO, ac_parentNO, userId, ac_content)
			VALUES(re_accomment_seq.NEXTVAL, #{re_articleNO}, #{ac_parentNO}, #{userId}, #{ac_content})
		]]>
	</insert>
	
</mapper>